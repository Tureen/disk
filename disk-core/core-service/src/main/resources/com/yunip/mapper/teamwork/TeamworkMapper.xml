<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yunip.mapper.teamwork.ITeamworkDao" >
  <resultMap id="BaseResultMap" type="TTeamwork" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="teamwork_name" property="teamworkName" jdbcType="VARCHAR" />
    <result column="icon" property="icon" jdbcType="TINYINT" />
    <result column="valid_status" property="validStatus" jdbcType="TINYINT" />
    <result column="employee_id" property="employeeId" jdbcType="INTEGER" />
    <result column="use_space_size" property="useSpaceSize" jdbcType="BIGINT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_admin" property="createAdmin" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_admin" property="updateAdmin" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="employee_name" property="employeeName" jdbcType="VARCHAR" />
    <result column="employee_number" property="employeeNumber" jdbcType="INTEGER" />
  </resultMap>
  
  <resultMap id="simpleMap" type="TSimpleTeamworkData" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="teamwork_name" property="teamworkName" jdbcType="VARCHAR" />
    <result column="icon" property="icon" jdbcType="TINYINT" />
    <result column="employee_id" property="employeeId" jdbcType="INTEGER" />
    <result column="use_space_size" property="useSpaceSize" jdbcType="BIGINT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="employee_name" property="employeeName" jdbcType="VARCHAR" />
    <result column="employee_number" property="employeeNumber" jdbcType="INTEGER" />
  </resultMap>
  
  <!-- 公共数据列 -->
  <sql id="Base_Column_List" >
    id, teamwork_name, icon, valid_status, employee_id, remark, create_admin, create_time, 
    update_admin, update_time
  </sql>
  
  <!-- 查询数据列 -->
  <sql id="Query_Column_List" >
    t.id, t.teamwork_name, t.icon, t.valid_status, t.employee_id, t.remark, t.create_admin, t.create_time, 
    t.update_admin, t.update_time
  </sql>
  
  <!-- 简易数据列 -->
  <sql id="data_Column_List" >
	t.id, t.teamwork_name, t.icon, t.employee_id, t.remark, t.create_time
  </sql>
  
  <!-- 查询单条 -->
  <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from yun_tw_teamwork
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <!-- 查找多条id根据所属员工id -->
  <select id="selectByEmployee" resultType="java.lang.Integer" parameterType="java.lang.Integer" >
    select id from yun_tw_teamwork
    where employee_id = #{id,jdbcType=INTEGER}
  </select>
  
  <!-- 删除单条 -->
  <delete id="delById" parameterType="java.lang.Integer" >
    delete from yun_tw_teamwork
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <!-- 批量删除单条 -->
  <delete id="batchDelete" parameterType="TTeamwork">
    DELETE FROM yun_tw_teamwork
    WHERE employee_id = #{employeeId,jdbcType=INTEGER}
    AND id IN 
    <foreach collection="ids" item="teamworkid" separator="," open="(" close=")">
    	#{teamworkid}
    </foreach >
  </delete>
  
  <!-- 插入数据 -->
  <insert id="insert" parameterType="TTeamwork" useGeneratedKeys="true"  keyProperty="id">
    insert into yun_tw_teamwork (id, teamwork_name, icon, valid_status, 
      employee_id, remark, create_admin, 
      create_time, update_admin, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{teamworkName,jdbcType=VARCHAR}, #{icon}, #{validStatus,jdbcType=TINYINT}, 
      #{employeeId,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{createAdmin,jdbcType=VARCHAR}, 
      now(), #{updateAdmin,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  
  <!-- 修改 -->
  <update id="update" parameterType="TTeamwork" >
    update yun_tw_teamwork
    <set >
      <if test="teamworkName != null" >
        teamwork_name = #{teamworkName,jdbcType=VARCHAR},
      </if>
      <if test="icon != null" >
        icon = #{icon,jdbcType=TINYINT},
      </if>
      <if test="validStatus != null" >
        valid_status = #{validStatus,jdbcType=TINYINT},
      </if>
      <if test="employeeId != null" >
        employee_id = #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createAdmin != null" >
        create_admin = #{createAdmin,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAdmin != null" >
        update_admin = #{updateAdmin,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 查询条件sql -->
  <sql id="Page_Query_Condition">
	  <if test="teamworkName != null and teamworkName != ''" >
        AND t.teamwork_name like CONCAT('%',#{teamworkName,jdbcType=VARCHAR},'%')
      </if>
      <if test="employeeId != null" >
        AND t.employee_id = #{employeeId,jdbcType=INTEGER}
      </if>
      <if test="validStatus != null" >
        AND t.valid_status = #{validStatus,jdbcType=TINYINT}
      </if>
      <if test="startDate != null and startDate != ''" >
         <![CDATA[AND t.create_time >= #{startDate,jdbcType=VARCHAR}]]>
      </if>
       <if test="endDate != null and endDate != ''" >
         <![CDATA[AND t.create_time <= #{endDate,jdbcType=VARCHAR}]]>
      </if>
      <if test="teamworkEmployeeId != null" >
        AND te.employee_id = #{teamworkEmployeeId,jdbcType=INTEGER}
      </if>
   </sql>
  
  <!-- 条件查询，列表 -->
  <select id="selectByQuery" parameterType="TTeamworkQuery" resultMap="BaseResultMap">
    select distinct 
    <include refid="Query_Column_List" />, e.employee_name,
     (select count(1) from yun_tw_teamwork_employee te where t.id = te.teamwork_id) as employee_number,
     (select IFNULL(sum(fi.file_size),0) from yun_tw_file fi where fi.teamwork_id = t.id) as use_space_size 
    from yun_tw_teamwork t
    left join yun_cp_employee e on t.employee_id = e.id
    left join yun_tw_teamwork_employee te on te.teamwork_id = t.id
    where 1 = 1
    <include refid="Page_Query_Condition" />
    limit #{pageStart},#{pageSize}
  </select>
  
  <!-- 条件查询，总数 -->
  <select id="selectCountByQuery" parameterType="TTeamworkQuery" resultType="java.lang.Integer">
	select count(1) from 
	( select DISTINCT t.id from yun_tw_teamwork t
	left join yun_tw_teamwork_employee te on te.teamwork_id = t.id
	where 1 = 1
	<include refid="Page_Query_Condition" />
	) as T
  </select>
  
  <!-- 条件查询，简易列表 -->
  <select id="selectSimpleDatas" parameterType="TTeamworkQuery" resultMap="simpleMap">
    select distinct 
    <include refid="data_Column_List" />, e.employee_name,
     (select count(1) from yun_tw_teamwork_employee te where t.id = te.teamwork_id) as employee_number,
     (select IFNULL(sum(fi.file_size),0) from yun_tw_file fi where fi.teamwork_id = t.id) as use_space_size 
    from yun_tw_teamwork t
    left join yun_cp_employee e on t.employee_id = e.id
    left join yun_tw_teamwork_employee te on te.teamwork_id = t.id
    where 1 = 1
    <include refid="Page_Query_Condition" />
  </select>
</mapper>