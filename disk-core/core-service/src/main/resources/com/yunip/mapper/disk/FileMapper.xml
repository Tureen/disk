<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yunip.mapper.disk.IFileDao" >
  <resultMap id="BaseResultMap" type="TFile" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="file_name" property="fileName" jdbcType="VARCHAR" />
    <result column="file_type" property="fileType" jdbcType="TINYINT" />
    <result column="employee_id" property="employeeId" jdbcType="INTEGER" />
    <result column="file_size" property="fileSize" jdbcType="DECIMAL" />
    <result column="folder_id" property="folderId" jdbcType="INTEGER" />
    <result column="folder_code" property="folderCode" jdbcType="VARCHAR" />
    <result column="file_path" property="filePath" jdbcType="VARCHAR" />
    <result column="file_version" property="fileVersion" jdbcType="INTEGER" />
    <result column="valid_status" property="validStatus" jdbcType="TINYINT" />
    <result column="share_status" property="shareStatus" jdbcType="TINYINT" />
    <result column="create_admin" property="createAdmin" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_admin" property="updateAdmin" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="oper_auth" property="operAuth" jdbcType="TINYINT" />
    <result column="encrypt_status" property="encryptStatus" jdbcType="TINYINT" />
    <result column="encrypt_key" property="encryptKey" jdbcType="VARCHAR" />
    <result column="server_code" property="serverCode" jdbcType="VARCHAR" />
  </resultMap>
  
  <!-- 含标签文件对象 -->
  <resultMap id="BaseResultSignMap" type="TFile" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="file_name" property="fileName" jdbcType="VARCHAR" />
    <result column="file_type" property="fileType" jdbcType="TINYINT" />
    <result column="employee_id" property="employeeId" jdbcType="INTEGER" />
    <result column="file_size" property="fileSize" jdbcType="DECIMAL" />
    <result column="folder_id" property="folderId" jdbcType="INTEGER" />
    <result column="folder_code" property="folderCode" jdbcType="VARCHAR" />
    <result column="file_path" property="filePath" jdbcType="VARCHAR" />
    <result column="file_version" property="fileVersion" jdbcType="INTEGER" />
    <result column="valid_status" property="validStatus" jdbcType="TINYINT" />
    <result column="share_status" property="shareStatus" jdbcType="TINYINT" />
    <result column="create_admin" property="createAdmin" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_admin" property="updateAdmin" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="oper_auth" property="operAuth" jdbcType="TINYINT" />
    <result column="file_version_num" property="fileVersionNum" jdbcType="INTEGER" />
    <result column="server_code" property="serverCode" jdbcType="VARCHAR" />
    <collection property="signs" column="id" javaType="java.util.ArrayList" select="selectSigns"></collection>  
  </resultMap>
  
  <!-- 标签 -->
  <resultMap id="SignMap" type="TSign" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="sign_name" property="signName" jdbcType="VARCHAR" />
  </resultMap>
  
  <!-- 公共数据列 -->
  <sql id="Base_Column_List" >
    id, file_name, file_type, employee_id, file_size, folder_id,folder_code, file_path, 
    file_version, valid_status, share_status, create_admin, create_time, update_admin, update_time, encrypt_status, encrypt_key, server_code
  </sql>
  
    <!-- 公共数据列 -->
  <sql id="Base_Admin_Column_List" >
    t.id, t.file_name, t.file_type, t.employee_id, t.file_size, t.folder_id, t.folder_code, t.file_path, 
    t.file_version, t.valid_status, t.share_status, t.create_admin, t.create_time, t.update_admin, t.update_time
  </sql>
  
  <!-- 查找单条 -->
  <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from yun_dk_file
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <!-- 查询总大小 -->
  <select id="selectFileSize" resultType="java.lang.Long">
  	select sum(file_size) from yun_dk_file
  </select>
  
  <!-- 删除单条 -->
  <delete id="delById" parameterType="java.lang.Integer" >
    delete from yun_dk_file
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <!-- 批量删除 -->
  <delete id="delBatchById" parameterType="java.util.List" >
    delete from yun_dk_file where id IN
    <foreach collection="list" item="fid" separator="," open="(" close=")">
    	#{fid}
    </foreach >
  </delete>
  
  <!-- 批量删除 -->
  <delete id="delByCode" parameterType="TFile" >
    delete from yun_dk_file where
    employee_id = #{employeeId} and folder_code like CONCAT(#{folderCode,jdbcType=VARCHAR},'%' )
  </delete>
  
  <!-- 插入数据 -->
  <insert id="insert" parameterType="TFile" useGeneratedKeys="true"  keyProperty="id">
    insert into yun_dk_file (file_name, file_type, 
      employee_id, file_size, folder_id, folder_code,
      file_path, file_version,
      valid_status, share_status, create_admin, create_time, 
      update_admin, update_time, encrypt_status, encrypt_key, server_code)
    values (#{fileName,jdbcType=VARCHAR}, #{fileType,jdbcType=TINYINT}, 
      #{employeeId,jdbcType=INTEGER}, #{fileSize,jdbcType=INTEGER}, #{folderId,jdbcType=INTEGER}, 
      #{folderCode,jdbcType=VARCHAR},#{filePath,jdbcType=VARCHAR}, #{fileVersion,jdbcType=INTEGER}, 
      #{validStatus,jdbcType=TINYINT},#{shareStatus,jdbcType=TINYINT}, #{createAdmin,jdbcType=VARCHAR}, 
      now(), #{updateAdmin,jdbcType=VARCHAR}, now(), #{encryptStatus,jdbcType=TINYINT}, #{encryptKey,jdbcType=VARCHAR}, #{serverCode,jdbcType=VARCHAR})
  </insert>
  
  <!-- 修改 -->
  <update id="update" parameterType="TFile" >
    update yun_dk_file
    <set >
      <if test="fileName != null" >
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileType != null" >
        file_type = #{fileType,jdbcType=TINYINT},
      </if>
      <if test="employeeId != null" >
        employee_id = #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="fileSize != null" >
        file_size = #{fileSize,jdbcType=INTEGER},
      </if>
      <if test="folderId != null" >
        folder_id = #{folderId,jdbcType=INTEGER},
      </if>
      <if test="folderCode != null" >
        folder_code = #{folderCode,jdbcType=VARCHAR},
      </if>
      <if test="filePath != null" >
        file_path = #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="fileVersion != null" >
        file_version = #{fileVersion,jdbcType=INTEGER},
      </if>
      <if test="validStatus != null" >
        valid_status = #{validStatus,jdbcType=TINYINT},
      </if>
      <if test="shareStatus != null" >
        share_status = #{shareStatus,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAdmin != null" >
        update_admin = #{updateAdmin,jdbcType=VARCHAR},
      </if>
      <if test="encryptStatus != null" >
        encrypt_status = #{encryptStatus,jdbcType=TINYINT},
      </if>
      <if test="encryptKey != null" >
        encrypt_key = #{encryptKey,jdbcType=VARCHAR},
      </if>
      <if test="serverCode != null" >
        server_code = #{serverCode,jdbcType=VARCHAR},
      </if>
      update_time = now(),
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 排序类型 -->
  <sql id="Order_By_Condition">
  	<if test='orderIndex != null and orderIndex =="1"'>
  		order by file_name asc
  	</if>
  	<if test='orderIndex != null and orderIndex =="2"'>
  		order by file_name desc
  	</if>
  	<if test='orderIndex != null and orderIndex =="3"'>
  		order by update_time asc
  	</if>
  	<if test='orderIndex != null and orderIndex =="4"'>
  		order by update_time desc
  	</if>
  	<if test='orderIndex != null and orderIndex =="5"'>
  		order by file_size asc
  	</if>
  	<if test='orderIndex != null and orderIndex =="6"'>
  		order by file_size desc
  	</if>
  </sql>
  
  <!-- 查询条件sql -->
  <sql id="Page_Query_Condition">
	  <if test="fileName != null and fileName != ''" >
        AND file_name = #{fileName,jdbcType=VARCHAR}
      </if>
      <if test="employeeId != null" >
        AND employee_id = #{employeeId,jdbcType=INTEGER}
      </if>
      <if test="folderId != null" >
        AND folder_id = #{folderId,jdbcType=INTEGER}
      </if>
      <if test="folderCode != null and folderCode != ''" >
        AND folder_code like CONCAT(#{folderCode,jdbcType=VARCHAR},'%' )
      </if>
      <if test="fileVersion != null" >
        AND file_version = #{fileVersion,jdbcType=INTEGER}
      </if>
      <if test="validStatus != null" >
        AND valid_status = #{validStatus,jdbcType=TINYINT}
      </if>
      <if test="shareStatus != null" >
        AND share_status = #{shareStatus,jdbcType=TINYINT}
      </if>
      <if test="filePath != null" >
        AND file_path = #{filePath,jdbcType=VARCHAR}
      </if>
       <if test="queryName != null and queryName != ''" >
        AND file_name like CONCAT('%',#{queryName,jdbcType=VARCHAR},'%' )
      </if>
      <if test="pFileId != null" >
        AND id != #{pFileId,jdbcType=INTEGER}
      </if>
      <if test="encryptStatus != null" >
        AND encrypt_status = #{encryptStatus,jdbcType=TINYINT}
      </if>
   </sql>
  
  <!-- 条件查询，列表 -->
  <select id="selectByQuery" parameterType="TFileQuery" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from yun_dk_file t
    where 1 = 1
    <include refid="Page_Query_Condition" />
    <include refid="Order_By_Condition" />
  </select>
  
  <!-- 条件查询，总数 -->
  <select id="selectCountByQuery" parameterType="TFileQuery" resultType="java.lang.Integer">
	select count(1) from yun_dk_file t
	where 1 = 1
	<include refid="Page_Query_Condition" />
  </select>
  
  <!-- 查询文件夹子目录文件 -->
  <select id="selectBySubQuery" resultMap="BaseResultMap" parameterType="TFileQuery">
   select * from yun_dk_file t WHERE  1=1
   <if test="employeeId != null">
   And employee_id = #{employeeId,jdbcType=INTEGER} 
   </if>
   <if test="folderId != null">
   AND folder_id = #{folderId,jdbcType=VARCHAR} 
   </if>
  <if test="queryName != null and queryName != ''">
	AND file_name like CONCAT('%',#{queryName,jdbcType=VARCHAR},'%' )
	UNION
	SELECT file.* FROM yun_dk_file file 
	LEFT JOIN yun_dk_file_sign fs ON file.id = fs.file_id 
	LEFT JOIN yun_dk_sign sign ON fs.sign_id = sign.id
	WHERE sign.sign_name like
	CONCAT('%',#{queryName,jdbcType=VARCHAR},'%' )
	<if test="folderId != null">
		AND 
		file.folder_id = #{folderId,jdbcType=VARCHAR}
	</if> 
	AND
	sign.employee_id = #{employeeId,jdbcType=INTEGER}
	AND 
	file.employee_id = #{employeeId,jdbcType=INTEGER}
  </if>
  	<include refid="Order_By_Condition" />
  </select>
  
  <!-- 查询文件夹子目录文件 -->
  <select id="selectBySubSignQuery" resultMap="BaseResultSignMap" parameterType="TFileQuery">
   select *,(select count(1) from yun_dk_file_version where file_id = t.id) as file_version_num 
   from yun_dk_file t WHERE  1=1
   <if test="employeeId != null">
   And employee_id = #{employeeId,jdbcType=INTEGER} 
   </if>
   <if test="folderId != null">
   AND folder_id = #{folderId,jdbcType=VARCHAR} 
   </if>
  <if test="queryName != null and queryName != ''">
	AND file_name like CONCAT('%',#{queryName,jdbcType=VARCHAR},'%' )
	UNION
	SELECT file.*, (SELECT count(1) FROM yun_dk_file_version WHERE file_id = file.id) AS file_version_num 
	FROM yun_dk_file file  
	LEFT JOIN yun_dk_file_sign fs ON file.id = fs.file_id 
	LEFT JOIN yun_dk_sign sign ON fs.sign_id = sign.id
	WHERE sign.sign_name like
	CONCAT('%',#{queryName,jdbcType=VARCHAR},'%' )
	<if test="folderId != null">
		AND 
		file.folder_id = #{folderId,jdbcType=VARCHAR}
	</if> 
	AND
	sign.employee_id = #{employeeId,jdbcType=INTEGER}
	AND 
	file.employee_id = #{employeeId,jdbcType=INTEGER}
  </if>
  	<include refid="Order_By_Condition" />
  </select>
  
  
  <!-- 根据文件夹code删除子文件夹 -->
  <delete id="delByFolderCode" parameterType="java.lang.String">
     delete from yun_dk_file where folder_code like  CONCAT(#{folderCode,jdbcType=VARCHAR},'%' )
  </delete>
  
  <!-- selectSigns查询文件的标签级联查询 -->
  <select id="selectSigns" parameterType="java.lang.String" resultMap="SignMap">
     SELECT sg.id , sg.sign_name FROM `yun_dk_sign` sg 
     LEFT JOIN `yun_dk_file_sign` fs
     ON sg.id = fs.sign_id WHERE fs.file_id = #{fileId};
  </select>
  
  <!-- 获取总共所有使用的文件大小 -->
  <select id="selectSumUseSpace" parameterType="java.lang.Integer" resultType="java.lang.Long">
     select sum(file_size) from yun_dk_file where employee_id = #{employeeId,jdbcType=INTEGER}
  </select>
  
  
    <!-- 条件查询，列表 -->
  <select id="selectAdminByQuery" parameterType="TFileQuery" resultMap="BaseResultMap">
    select 
    <include refid="Base_Admin_Column_List" />
    from yun_dk_file t left join 
    yun_cp_employee emp on emp.id = t.employee_id
    where 1 = 1
    <include refid="Page_Admin_Query_Condition" />
    order by t.create_time desc
    limit #{pageStart},#{pageSize}
  </select>
  
  <!-- 条件查询，总数 -->
  <select id="selectAdminCountByQuery" parameterType="TFileQuery" resultType="java.lang.Integer">
	select count(1) from yun_dk_file t left join 
    yun_cp_employee emp on emp.id = t.employee_id
	where 1 = 1
	<include refid="Page_Admin_Query_Condition" />
	order by t.create_time desc
  </select>
  
  <!-- 查询条件sql -->
  <sql id="Page_Admin_Query_Condition">
	  <if test="fileName != null and fileName != ''" >
        AND t.file_name = #{fileName,jdbcType=VARCHAR}
      </if>
      <if test="employeeId != null" >
        AND t.employee_id = #{employeeId,jdbcType=INTEGER}
      </if>
      <if test="folderId != null" >
        AND t.folder_id = #{folderId,jdbcType=INTEGER}
      </if>
      <if test="folderCode != null and folderCode != ''" >
        AND t.folder_code like CONCAT(#{folderCode,jdbcType=VARCHAR},'%' )
      </if>
      <if test="fileVersion != null" >
        AND t.file_version = #{fileVersion,jdbcType=INTEGER}
      </if>
      <if test="validStatus != null" >
        AND t.valid_status = #{validStatus,jdbcType=TINYINT}
      </if>
      <if test="shareStatus != null" >
        AND t.share_status = #{shareStatus,jdbcType=TINYINT}
      </if>
      <if test="filePath != null" >
        AND t.file_path = #{filePath,jdbcType=VARCHAR}
      </if>
      <if test="queryName != null and queryName != ''" >
        AND t.file_name like CONCAT('%',#{queryName,jdbcType=VARCHAR},'%' )
      </if>
      <if test="employeeName != null and employeeName != ''" >
        AND t.create_admin like CONCAT('%',#{employeeName,jdbcType=VARCHAR},'%' )
      </if>
      <if test="startDate != null and startDate != ''" >
         <![CDATA[AND t.create_time >= #{startDate,jdbcType=VARCHAR}]]>
      </if>
       <if test="endDate != null and endDate != ''" >
         <![CDATA[AND t.create_time <= #{endDate,jdbcType=VARCHAR}]]>
      </if>
       <if test="deptId != null and deptId != ''" >
        AND emp.dept_id like CONCAT(#{deptId,jdbcType=VARCHAR},'%' )
      </if>
   </sql>
</mapper>